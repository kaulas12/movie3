{"version":3,"sources":["useFetch.js","context.js","Movie.js","Search.js","Home.js","SingleMovie.js","App.js","reportWebVitals.js","index.js"],"names":["useFetch","apiParams","_useState","useState","_useState2","Object","slicedToArray","isLoading","setIsLoading","_useState3","show","msg","_useState4","isError","setIsError","_useState5","_useState6","movie","setMovie","getMovie","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","url","res","data","wrap","_context","prev","next","fetch","sent","json","console","log","Response","Search","Error","t0","stop","_x","apply","this","arguments","useEffect","timeOut","setTimeout","concat","clearTimeout","AppContext","React","createContext","AppProvider","children","query","setQuery","_useFetch","react_default","a","createElement","Provider","value","useGlobalContext","useContext","Movie","_useGlobalContext","className","Fragment","map","curMovieElem","imdbID","Title","Poster","movieName","substring","react_router_dom","to","key","length","src","alt","action","onSubmit","e","preventDefault","type","placeholder","onChange","target","Home","src_Search","src_Movie","SingleMovie","id","useParams","Released","Genre","imdbRating","Country","App","react_router","path","element","src_Home","src_SingleMovie","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","context_AppProvider","src_App_0"],"mappings":"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","file":"static/js/main.9baec2eb.chunk.js","sourcesContent":["import  { useState, useEffect } from \"react\";\n\n// setting the api link\nexport const API_URL = `http://www.omdbapi.com/?i=tt3896198&apikey=cf4f2368`;\n\n\nconst useFetch = (apiParams) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState({ show: \"false\", msg: \"\" });\n  const [movie, setMovie] = useState(null);\n\n  const getMovie = async (url) => {\n    setIsLoading(true);\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n\n      console.log(data);\n      if (data.Response === \"True\") {\n        setIsLoading(false);\n        setMovie(data.Search || data);\n        setIsError({ show: \"false\", msg: \"\" });\n      } else {\n        setIsError({ show: \"true\", msg: data.Error });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // debouncing in react js\n  useEffect(() => {\n    let timeOut = setTimeout(() => {\n      getMovie(`${API_URL}&s=${apiParams}`);\n    }, 1000);\n    console.log(\"set\");\n    return () => {\n      clearTimeout(timeOut);\n      console.log(\"clear\");\n    };\n  }, [apiParams]);\n\n  return { isLoading, isError, movie };\n};\n\nexport default useFetch;\n","import React, { useContext, useState } from \"react\";\nimport useFetch from \"./useFetch\";\n\nconst AppContext = React.createContext();\n\n\nconst AppProvider = ({ children }) => {\n  const [query, setQuery] = useState(\"hacker\");\n  const { isLoading, isError, movie } = useFetch(`&s=${query}`);\n\n  return (\n    <AppContext.Provider value={{ query, movie, setQuery, isLoading, isError }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nconst useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider, useGlobalContext };\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useGlobalContext } from \"./context\";\n\nconst imgUrl = \"https://via.placeholder.com/200/200\";\n\nconst Movie = () => {\n  const { movie, isLoading } = useGlobalContext();\n  if (isLoading) {\n    return <div className=\"loading\">Loading....</div>;\n  }\n\n  \n\n  return (\n    <>\n      {/* if movie is present then only show data else remain as it is  */}\n      <section className=\"movie-page\">\n        <div className=\"grid grid-4-col\">\n          {movie\n            ? movie.map((curMovieElem) => {\n                const { imdbID, Title, Poster } = curMovieElem;\n                const movieName = Title.substring(0, 15);\n\n                return (\n                  <NavLink to={`movie/${imdbID}`} key={imdbID}>\n                    <div className=\"card\">\n                      <div className=\"card-info\">\n                        <h2>\n                          {movieName.length > 13\n                            ? `${movieName}...`\n                            : movieName}\n                        </h2>\n                        <img src={Poster === \"N/A\" ? imgUrl : Poster} alt=\"#\" />\n                      </div>\n                    </div>\n                  </NavLink>\n                );\n              })\n            : \"\"}\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Movie;\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\n\nconst Search = () => {\n  const { query, setQuery, isError } = useGlobalContext();\n  \n  return (\n    <>\n      <section className=\"search-section\">\n        <h2>Search Your Favourite Movie</h2>\n        <form action=\"#\" onSubmit={(e) => e.preventDefault()}>\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"search movie\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n            />\n          </div>\n        </form>\n        <div className=\"card-error\">\n          <p>{isError.show && isError.msg}</p>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Search;\n","import React  from 'react';\nimport Movie from \"./Movie\";\nimport Search from \"./Search\";\n\nconst Home = () => {\n  return (\n    <>\n      <div className=\"container\">\n        {}\n        <Search />\n        <Movie />\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React  from 'react';\nimport { NavLink, useParams } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\n\nconst SingleMovie = () => {\n  const { id } = useParams();\n  console.log(id);\n\n  const { isLoading, movie } = useFetch(`&i=${id}`);\n\n  if (isLoading) {\n    return (\n      <section className=\"movie-section \">\n        <div className=\"loading\">Loading....</div>;\n      </section>\n    );\n  }\n\n  return (\n    <section className=\"movie-section\">\n      <div className=\"movie-card\">\n        <figure>\n          <img src={movie.Poster} alt=\"\" />\n        </figure>\n        <div className=\"card-content\">\n          <p className=\"title\">{movie.Title}</p>\n          <p className=\"\"></p>\n          <p className=\"card-text\">{movie.Released}</p>\n          <p className=\"card-text\">{movie.Genre}</p>\n          <p className=\"card-text\">{movie.imdbRating} / 10</p>\n          <p className=\"card-text\">{movie.Country}</p>\n          <NavLink to=\"/\" className=\"back-btn\">\n            Go Back\n          </NavLink>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SingleMovie;\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport SingleMovie from \"./SingleMovie\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"movie/:id\" element={<SingleMovie />} />\n    </Routes>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AppProvider } from \"./context\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <AppProvider>\n      <Router>\n        <App />\n      </Router>\n    </AppProvider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}