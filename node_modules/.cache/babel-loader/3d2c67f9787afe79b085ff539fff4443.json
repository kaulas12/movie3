{"ast":null,"code":"import _slicedToArray from \"/home/devyani/React/movie3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/devyani/React/movie3/src/context.js\";\n\nimport React, { useContext, useState } from \"react\";\nimport useFetch from \"./useFetch\";\nvar AppContext = React.createContext();\n\nvar AppProvider = function AppProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(\"hacker\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var _useFetch = useFetch(\"&s=\".concat(query)),\n      isLoading = _useFetch.isLoading,\n      isError = _useFetch.isError,\n      movie = _useFetch.movie;\n\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      query: query,\n      movie: movie,\n      setQuery: setQuery,\n      isLoading: isLoading,\n      isError: isError\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nvar useGlobalContext = function useGlobalContext() {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider, useGlobalContext };","map":{"version":3,"names":["React","useContext","useState","useFetch","AppContext","createContext","AppProvider","children","query","setQuery","isLoading","isError","movie","useGlobalContext"],"sources":["/home/devyani/React/movie3/src/context.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport useFetch from \"./useFetch\";\n\nconst AppContext = React.createContext();\n\n\nconst AppProvider = ({ children }) => {\n  const [query, setQuery] = useState(\"hacker\");\n  const { isLoading, isError, movie } = useFetch(`&s=${query}`);\n\n  return (\n    <AppContext.Provider value={{ query, movie, setQuery, isLoading, isError }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nconst useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider, useGlobalContext };\n"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAMC,UAAU,GAAGJ,KAAK,CAACK,aAAN,EAAnB;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkB;EAAA,IAAfC,QAAe,QAAfA,QAAe;;EAAA,gBACVL,QAAQ,CAAC,QAAD,CADE;EAAA;EAAA,IAC7BM,KAD6B;EAAA,IACtBC,QADsB;;EAAA,gBAEEN,QAAQ,cAAOK,KAAP,EAFV;EAAA,IAE5BE,SAF4B,aAE5BA,SAF4B;EAAA,IAEjBC,OAFiB,aAEjBA,OAFiB;EAAA,IAERC,KAFQ,aAERA,KAFQ;;EAIpC,oBACE,oBAAC,UAAD,CAAY,QAAZ;IAAqB,KAAK,EAAE;MAAEJ,KAAK,EAALA,KAAF;MAASI,KAAK,EAALA,KAAT;MAAgBH,QAAQ,EAARA,QAAhB;MAA0BC,SAAS,EAATA,SAA1B;MAAqCC,OAAO,EAAPA;IAArC,CAA5B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGJ,QADH,CADF;AAKD,CATD;;AAWA,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;EAC7B,OAAOZ,UAAU,CAACG,UAAD,CAAjB;AACD,CAFD;;AAIA,SAASA,UAAT,EAAqBE,WAArB,EAAkCO,gBAAlC"},"metadata":{},"sourceType":"module"}